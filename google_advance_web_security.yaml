npx create-react-app secure-guardian  
cd secure-guardian  
npm install axios react-router-dom styled-components chart.js  


npm install crypto-js web-vitals js-sha256  


secure-guardian/
│── src/
│   ├── components/
│   │   ├── GoogleSecurity.js
│   │   ├── DarkWebScanner.js
│   │   ├── AdBlocker.js
│   │   ├── MobileDataScanner.js
│   │   ├── RealTimeDefense.js
│   │   ├── AntiSpy.js
│   │   ├── SpeedTest.js
│   ├── App.js
│   ├── index.js
│── package.json
│── public/
│── node_modules/


import React, { useState } from "react";
import axios from "axios";

const API_KEY = "YOUR_GOOGLE_SAFE_BROWSING_API_KEY";  
const GOOGLE_SAFE_BROWSING_URL = `https://safebrowsing.googleapis.com/v4/threatMatches:find?key=${API_KEY}`;

const GoogleSecurity = () => {
  const [url, setUrl] = useState("");
  const [threat, setThreat] = useState(null);

  const checkURL = async () => {
    const body = {
      client: { clientId: "secureApp", clientVersion: "1.0" },
      threatInfo: {
        threatTypes: ["MALWARE", "SOCIAL_ENGINEERING"],
        platformTypes: ["ANY_PLATFORM"],
        threatEntryTypes: ["URL"],
        threatEntries: [{ url }]
      }
    };

    try {
      const res = await axios.post(GOOGLE_SAFE_BROWSING_URL, body);
      setThreat(res.data.matches ? "⚠ Threat Found!" : "✅ Safe");
    } catch (error) {
      setThreat("Error Checking URL");
    }
  };

  return (
    <div>
      <h2>Google Security Checker</h2>
      <input type="text" value={url} onChange={(e) => setUrl(e.target.value)} placeholder="Enter URL"/>
      <button onClick={checkURL}>Check</button>
      <p>{threat}</p>
    </div>
  );
};

export default GoogleSecurity;


import React, { useState } from "react";
import axios from "axios";

const DarkWebScanner = () => {
  const [email, setEmail] = useState("");
  const [status, setStatus] = useState("");

  const checkDarkWeb = async () => {
    try {
      const res = await axios.get(`https://haveibeenpwned.com/api/v3/breachedaccount/${email}`);
      setStatus(res.data.length > 0 ? "⚠ Found in Dark Web" : "✅ Safe");
    } catch (error) {
      setStatus("Error Checking Dark Web");
    }
  };

  return (
    <div>
      <h2>Dark Web Scanner</h2>
      <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Enter Email"/>
      <button onClick={checkDarkWeb}>Scan</button>
      <p>{status}</p>
    </div>
  );
};

export default DarkWebScanner;


import React, { useEffect } from "react";

const AdBlocker = () => {
  useEffect(() => {
    const scripts = document.querySelectorAll("script[src*='ads'], iframe[src*='ads']");
    scripts.forEach((script) => script.remove());
  }, []);

  return <h2>Ad Blocker Enabled ✅</h2>;
};

export default AdBlocker;


import React, { useState } from "react";

const MobileDataScanner = () => {
  const [status, setStatus] = useState("Scanning...");

  const scan = () => {
    if (navigator.connection) {
      setStatus(`Connection Type: ${navigator.connection.effectiveType}`);
    } else {
      setStatus("No Mobile Data Detected");
    }
  };

  return (
    <div>
      <h2>Mobile Data Security Scanner</h2>
      <button onClick={scan}>Scan Now</button>
      <p>{status}</p>
    </div>
  );
};

export default MobileDataScanner;


import React, { useState, useEffect } from "react";

const RealTimeDefense = () => {
  const [attackLog, setAttackLog] = useState([]);

  useEffect(() => {
    const detectIntrusion = () => {
      const randomAttack = Math.random() > 0.7;
      if (randomAttack) {
        setAttackLog((prev) => [...prev, "⚠ Attack Blocked - Taunting Hacker!"]);
      }
    };
    const interval = setInterval(detectIntrusion, 5000);
    return () => clearInterval(interval);
  }, []);

  return (
    <div>
      <h2>Real-Time Defense</h2>
      {attackLog.map((log, index) => (
        <p key={index}>{log}</p>
      ))}
    </div>
  );
};

export default RealTimeDefense;


import React, { useState } from "react";

const SpeedTest = () => {
  const [speed, setSpeed] = useState(null);

  const testSpeed = () => {
    const start = performance.now();
    fetch("https://www.google.com").then(() => {
      const duration = performance.now() - start;
      setSpeed(`${(1000 / duration).toFixed(2)} Mbps`);
    });
  };

  return (
    <div>
      <h2>Honest Speed Test</h2>
      <button onClick={testSpeed}>Test Speed</button>
      <p>{speed ? `Speed: ${speed}` : "Click to Test"}</p>
    </div>
  );
};

export default SpeedTest;


import React from "react";
import GoogleSecurity from "./components/GoogleSecurity";
import DarkWebScanner from "./components/DarkWebScanner";
import AdBlocker from "./components/AdBlocker";
import MobileDataScanner from "./components/MobileDataScanner";
import RealTimeDefense from "./components/RealTimeDefense";
import SpeedTest from "./components/SpeedTest";

function App() {
  return (
    <div>
      <GoogleSecurity />
      <DarkWebScanner />
      <AdBlocker />
      <MobileDataScanner />
      <RealTimeDefense />
      <SpeedTest />
    </div>
  );
}

export default App;

