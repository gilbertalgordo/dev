import React, { useState, useRef, useEffect } from 'react';

const GameConsoleCodec = () => {
  const [videoSrc, setVideoSrc] = useState(null);
  const videoRef = useRef(null);
  const [adBlocked, setAdBlocked] = useState(false);
  const [adOverlay, setAdOverlay] = useState(true); // Simulate an ad overlay initially
  const [adTimer, setAdTimer] = useState(5); // Simulate a 5-second ad

  useEffect(() => {
    // Simulate fetching a video source (replace with actual logic)
    const fetchVideo = async () => {
      try {
        // Simulate fetching video data
        setVideoSrc('your_video_source.mp4'); // Replace with your video URL
      } catch (error) {
        console.error('Error fetching video:', error);
      }
    };

    fetchVideo();

    // Simulate ad detection (replace with actual ad blocking logic)
    const checkAdBlock = () => {
      // In a real scenario, this would involve checking for specific ad-related elements
      // or network requests. For simplicity, we'll use a placeholder.
      if (window.adsBlocked === true) { // Hypothetical check. Replace with your actual ad block detection.
        setAdBlocked(true);
        setAdOverlay(false);
      }
    };

    checkAdBlock(); // Initial ad block check

    let timer;

    if(adOverlay){
        timer = setInterval(() => {
            setAdTimer((prevTimer) => {
                if (prevTimer > 0) {
                    return prevTimer - 1;
                } else {
                    clearInterval(timer);
                    setAdOverlay(false);
                    return 0;
                }
            });
        }, 1000);
    }
    return () => clearInterval(timer);

  }, []);

  useEffect(() => {
    if (videoSrc && videoRef.current) {
      videoRef.current.src = videoSrc;
      videoRef.current.load();
      videoRef.current.play();
    }
  }, [videoSrc]);

  return (
    <div style={{ width: '100%', height: '100vh', position: 'relative' }}>
      {adOverlay && (
        <div
          style={{
            position: 'absolute',
            top: 0,
            left: 0,
            width: '100%',
            height: '100%',
            backgroundColor: 'rgba(0, 0, 0, 0.8)',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            zIndex: 1000,
            color: 'white',
            fontSize: '24px',
          }}
        >
          Ad Loading... {adTimer}
        </div>
      )}
      <video
        ref={videoRef}
        controls
        style={{ width: '100%', height: '100%' }}
      >
        Your browser does not support the video tag.
      </video>
      {adBlocked && (
        <div
          style={{
            position: 'absolute',
            top: '10px',
            left: '10px',
            backgroundColor: 'rgba(0, 0, 0, 0.7)',
            color: 'white',
            padding: '5px 10px',
            borderRadius: '5px',
            zIndex: 999,
          }}
        >
          Ad Blocked
        </div>
      )}
    </div>
  );
};

export default GameConsoleCodec;
