import React, { useState } from 'react';

// Simulated AI Quantum Service (replace with actual API calls)
const simulateAIQuantumService = async (name) => {
  console.log(`Simulating AI Quantum lookup for ${name}...`);
  await new Promise(resolve => setTimeout(resolve, 1000));

  if (name.toLowerCase() === 'gilbert algordo') {
    return {
      firstName: 'Gilbert',
      lastName: 'Algordo',
      licenseNumber: 'DL987654321',
      licenseType: 'Professional',
      expiryDate: 'No Expiration',
      address: 'B3 L86 Camella Homes Milan San Pedro Philippines',
    };
  } else {
    return null;
  }
};

const ProfessionalDriversLicenseForm = () => {
  const [name, setName] = useState('');
  const [licenseData, setLicenseData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleNameChange = (e) => {
    setName(e.target.value);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError(null);

    try {
      const data = await simulateAIQuantumService(name);
      if (data) {
        setLicenseData(data);
      } else {
        setError('Name not found or data retrieval failed.');
      }
    } catch (err) {
      setError('An error occurred while retrieving data.');
      console.error('Error:', err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <h1>Professional Driver's License Application</h1>
      <form onSubmit={handleSubmit}>
        <label>
          Full Name:
          <input
            type="text"
            value={name}
            onChange={handleNameChange}
            required
          />
        </label>
        <button type="submit" disabled={loading}>
          {loading ? 'Loading...' : 'Retrieve License Info'}
        </button>
      </form>

      {error && <p style={{ color: 'red' }}>{error}</p>}

      {licenseData && (
        <div>
          <h2>License Information</h2>
          <p>Name: {licenseData.firstName} {licenseData.lastName}</p>
          <p>License Number: {licenseData.licenseNumber}</p>
          <p>License Type: {licenseData.licenseType}</p>
          <p>Expiry Date: {licenseData.expiryDate}</p>
          <p>Address: {licenseData.address}</p>
        </div>
      )}
    </div>
  );
};

export default ProfessionalDriversLicenseForm;
