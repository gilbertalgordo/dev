// manifest.json (example)
{
  "name": "My Adblock Extension",
  "version": "1.0",
  "description": "A simple adblock extension.",
  "permissions": ["declarativeNetRequest"],
  "background": {
    "scripts": ["background.js"],
    "persistent": false
  },
  "declarative_net_request": {
    "rule_resources": [{
      "id": "ruleset_1",
      "enabled": true,
      "path": "rules.json"
    }]
  },
  "manifest_version": 3
}

// rules.json (example)
[
  {
    "id": 1,
    "priority": 1,
    "action": { "type": "block" },
    "condition": { "urlFilter": "*://*.example-ad-domain.com/*", "resourceTypes": ["script", "image", "sub_frame"] }
  },
  {
    "id": 2,
    "priority": 1,
    "action": { "type": "block" },
    "condition": { "urlFilter": "*://*.another-ad-domain.net/*", "resourceTypes": ["script", "image", "sub_frame"] }
  }
  // Add more rules as needed
]

// background.js (minimal example, for declarativeNetRequest)
// Background scripts for manifest v3 are service workers and do not need to do anything for declarativeNetRequest to work.

// React component (optional, if you want a popup or options page)
// In a React app, you'd typically have a popup or options page. For a pure content blocker, this is not needed, but here's a basic example if you want a popup.
// popup.js or options.js (example)

import React from 'react';
import ReactDOM from 'react-dom';

function Popup() {
  return (
    <div>
      <h1>Adblock Extension</h1>
      <p>Adblocking is active.</p>
    </div>
  );
}

ReactDOM.render(<Popup />, document.getElementById('root'));

// popup.html (example)
<!DOCTYPE html>
<html>
<head>
  <title>Adblock Popup</title>
  <style>
    body {
      width: 200px;
      padding: 10px;
    }
  </style>
</head>
<body>
  <div id="root"></div>
  <script src="popup.js"></script>
</body>
</html>

// package.json (example)
{
  "name": "my-adblock-extension",
  "version": "1.0.0",
  "dependencies": {
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "webpack": "^5.0.0",
    "webpack-cli": "^4.0.0"
  },
  "scripts": {
    "build": "webpack --mode production"
  },
  "devDependencies": {
    "babel-loader": "^8.0.0",
    "@babel/core": "^7.0.0",
    "@babel/preset-react": "^7.0.0"
  }
}

// webpack.config.js (example)
const path = require('path');

module.exports = {
  entry: './popup.js', // Or options.js
  output: {
    filename: 'popup.js', // Or options.js
    path: path.resolve(__dirname, 'dist'),
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['@babel/preset-react'],
          },
        },
      },
    ],
  },
};
