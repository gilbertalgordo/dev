import numpy as np
from sklearn.linear_model import LinearRegression

# Simulated historical data: [oxygen, density, glucose, growth_factor]
historical_inputs = np.array([
    [95, 100, 5.5, 1.2], [92, 120, 6.0, 1.3], [97, 140, 5.8, 1.1], [96, 110, 4.5, 1.0]
])

# Corresponding regeneration rates
historical_outputs = np.array([0.8, 0.9, 0.85, 0.75])

# Train AI model
model = LinearRegression()
model.fit(historical_inputs, historical_outputs)

def predict_regeneration(sensor_data):
    # Extract required features
    features = np.array([
        sensor_data["oxygen_level"],
        sensor_data["cell_density"],
        sensor_data["glucose_level"],
        sensor_data["growth_factor"]
    ]).reshape(1, -1)

    # Predict the regeneration rate
    prediction = model.predict(features)[0]
    return round(prediction, 2)

# Simulating AI-driven prediction
for _ in range(5):
    data = collect_data()
    for sensor_id, sensor_values in data.items():
        prediction = predict_regeneration(sensor_values)
        print(f"{sensor_id} Predicted Regeneration Rate: {prediction}")
    time.sleep(1)
