import React, { useState, useEffect } from 'react';
import './Yacht.css'; // We will create this CSS file for styling

// Component to display engine status
const HybridEngineStatus = ({ engineData }) => {
  if (!engineData) {
    return <div>Loading Engine Data...</div>;
  }

  return (
    <div className="engine-status">
      <h3>Advanced Hybrid Engine Status</h3>
      <p>Status: <span className={`status-${engineData.status.toLowerCase()}`}>{engineData.status}</span></p>
      <div className="power-flow">
        <h4>Power Flow</h4>
        <p>Diesel Engine: {engineData.power.diesel} kW</p>
        <p>Electric Motor: {engineData.power.electric} kW</p>
        <p>Battery Bank: {engineData.battery.level}% ({engineData.power.battery} kW)</p>
        <div className="power-diagram">
          {/* Simplified power flow diagram representation */}
          <div className="component diesel">Diesel Engine</div>
          <div className="arrow right">{'>'}</div>
          <div className="component electric">Electric Motor</div>
          <div className="arrow right">{'>'}</div>
          <div className="component propeller">Propeller</div>
          <div className="component battery">Battery Bank</div>
          <div className="arrow up">{'^'}</div>
          <div className="arrow down">{'v'}</div>
          <div className="component system">Onboard Systems</div>
        </div>
      </div>
      <p>Current Mode: {engineData.mode}</p>
      <p>Efficiency: {engineData.efficiency}%</p>
    </div>
  );
};

// Component to represent the transparent yacht
const TransparentYacht = ({ engineData }) => {
  return (
    <div className="yacht-container">
      <h2>Transparent Yacht Concept</h2>
      <div className="yacht-hull">
        {/* Sections of the yacht hull with transparency */}
        <div className="yacht-section deck">Deck</div>
        <div className="yacht-section cabin">Cabin</div>
        <div className="yacht-section engine-room">
          Engine Room
          <HybridEngineStatus engineData={engineData} />
        </div>
        <div className="yacht-section hull-below">Below Waterline</div>
      </div>
      <p className="concept-note">
        This is a conceptual visualization. True transparency requires advanced rendering.
      </p>
    </div>
  );
};

// Main App component (example usage)
const App = () => {
  const [engineData, setEngineData] = useState(null);

  useEffect(() => {
    // Simulate fetching real-time engine data
    const fetchEngineData = () => {
      // In a real application, you would fetch this from an API
      const mockEngineData = {
        status: Math.random() > 0.1 ? 'Online' : 'Offline',
        power: {
          diesel: Math.floor(Math.random() * 500) + (Math.random() > 0.5 ? 1000 : 0), // Simulate varying diesel power
          electric: Math.floor(Math.random() * 300) + (Math.random() > 0.3 ? 500 : 0), // Simulate varying electric power
          battery: Math.floor(Math.random() * 200) * (Math.random() > 0.5 ? 1 : -1), // Simulate charging/discharging
        },
        battery: {
          level: Math.floor(Math.random() * 100),
        },
        mode: Math.random() > 0.7 ? 'Electric' : (Math.random() > 0.4 ? 'Hybrid' : 'Diesel'),
        efficiency: Math.floor(Math.random() * 30) + 60, // Simulate efficiency percentage
      };
      setEngineData(mockEngineData);
    };

    fetchEngineData();
    const interval = setInterval(fetchEngineData, 5000); // Update data every 5 seconds

    return () => clearInterval(interval); // Cleanup interval on unmount
  }, []);

  return (
    <div className="App">
      <TransparentYacht engineData={engineData} />
    </div>
  );
};

export default App;



/* Yacht.css */

.App {
  font-family: sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f0f0f0;
  padding: 20px;
  box-sizing: border-box;
}

.yacht-container {
  background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent background for the container */
  border-radius: 15px;
  padding: 30px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  text-align: center;
  width: 90%;
  max-width: 800px;
}

.yacht-container h2 {
  color: #003366;
  margin-bottom: 20px;
}

.yacht-hull {
  display: flex;
  flex-direction: column;
  gap: 15px;
  margin-bottom: 20px;
  border: 2px solid #003366;
  border-radius: 10px;
  overflow: hidden; /* Ensures rounded corners on inner sections */
}

.yacht-section {
  background-color: rgba(135, 206, 235, 0.5); /* Semi-transparent sky blue */
  padding: 15px;
  border-bottom: 1px solid rgba(0, 51, 102, 0.3);
  color: #003366;
  font-weight: bold;
  text-align: center;
}

.yacht-section:last-child {
  border-bottom: none;
}

.engine-room {
  background-color: rgba(169, 169, 169, 0.6); /* Semi-transparent grey for engine room */
}

.engine-status {
  margin-top: 15px;
  background-color: rgba(255, 255, 255, 0.7);
  padding: 15px;
  border-radius: 8px;
  text-align: left;
  color: #333;
}

.engine-status h3, .engine-status h4 {
  color: #003366;
  margin-bottom: 10px;
}

.engine-status p {
  margin-bottom: 5px;
}

.status-online {
  color: green;
  font-weight: bold;
}

.status-offline {
  color: red;
  font-weight: bold;
}

.power-flow {
  margin-top: 15px;
  border-top: 1px solid #ccc;
  padding-top: 15px;
}

.power-diagram {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  flex-wrap: wrap; /* Allow items to wrap on smaller screens */
}

.component {
  background-color: #0056b3;
  color: white;
  padding: 8px 12px;
  border-radius: 5px;
  font-size: 0.9em;
}

.arrow {
  font-size: 1.5em;
  color: #0056b3;
  font-weight: bold;
}

.arrow.up {
  align-self: flex-end;
  margin-right: -20px; /* Adjust arrow position */
  margin-bottom: 5px;
}

.arrow.down {
  align-self: flex-start;
  margin-right: -20px; /* Adjust arrow position */
  margin-top: 5px;
}


.battery, .system {
    background-color: #28a745; /* Green for battery/systems */
}

.concept-note {
  margin-top: 20px;
  font-size: 0.9em;
  color: #555;
}



npx create-react-app my-yacht-app
cd my-yacht-app
# or
npm create vite@latest my-yacht-app --template react
cd my-yacht-app
npm install



npm start
# or
npm run dev
