import React, { useState, useEffect, useRef } from 'react';

const AdvancedF47GT = () => {
  const [enginePower, setEnginePower] = useState(0);
  const [turboBoost, setTurboBoost] = useState(0);
  const [laserCharge, setLaserCharge] = useState(0);
  const [shockwaveActive, setShockwaveActive] = useState(false);
  const carRef = useRef(null);

  useEffect(() => {
    const engineInterval = setInterval(() => {
      setEnginePower((prevPower) => Math.min(prevPower + 1, 100));
      setTurboBoost((prevBoost) => Math.max(0, prevBoost - 0.5));
    }, 100);

    const laserInterval = setInterval(() => {
      setLaserCharge((prevCharge) => Math.min(prevCharge + 2, 100));
    }, 200);

    return () => {
      clearInterval(engineInterval);
      clearInterval(laserInterval);
    };
  }, []);

  const activateTurbo = () => {
    setTurboBoost(100);
  };

  const fireLaser = () => {
    if (laserCharge >= 50) {
      console.log('Laser Fired!');
      setLaserCharge(0);
      // Simulate laser effect
    } else {
      console.log('Laser charge too low!');
    }
  };

  const activateShockwave = () => {
    setShockwaveActive(true);
    console.log('Shockwave Activated!');
    setTimeout(() => {
      setShockwaveActive(false);
      console.log('Shockwave Deactivated!');
    }, 2000);
  };

  const carStyle = {
    width: '350px',
    height: '180px',
    backgroundColor: '#333',
    position: 'relative',
    borderRadius: '15px',
    border: '3px solid #666',
    overflow: 'hidden',
    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.5)',
  };

  const turboBarStyle = {
    width: `${turboBoost}%`,
    height: '12px',
    backgroundColor: 'orange',
    position: 'absolute',
    bottom: '8px',
    left: '8px',
    transition: 'width 0.3s ease-in-out',
  };

  const laserBarStyle = {
    width: `${laserCharge}%`,
    height: '12px',
    backgroundColor: 'red',
    position: 'absolute',
    bottom: '25px',
    left: '8px',
    transition: 'width 0.3s ease-in-out',
  };

   const engineBarStyle = {
    width: `${enginePower}%`,
    height: '12px',
    backgroundColor: 'green',
    position: 'absolute',
    bottom: '42px',
    left: '8px',
    transition: 'width 0.3s ease-in-out',
  };

  const shockwaveStyle = {
    position: 'absolute',
    width: '400px',
    height: '400px',
    borderRadius: '50%',
    border: '4px dashed blue',
    animation: shockwaveActive ? 'shockwave 2s linear' : 'none',
    top: '-125px',
    left: '-25px',
    opacity: shockwaveActive ? 0.7 : 0,
    pointerEvents: 'none',
  };

  const gtLogoStyle = {
    position: 'absolute',
    top: '10px',
    right: '10px',
    fontSize: '2em',
    fontWeight: 'bold',
    color: '#ff0000',
    fontFamily: 'Arial, sans-serif',
    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',
  };

  return (
    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <div ref={carRef} style={carStyle}>
        <div style={turboBarStyle}></div>
        <div style={laserBarStyle}></div>
        <div style={shockwaveStyle}></div>
        <div style={gtLogoStyle}>GT</div>
        <div style={engineBarStyle}></div>
      </div>
      <button onClick={activateTurbo}>Activate Turbo</button>
      <button onClick={fireLaser}>Fire Laser</button>
      <button onClick={activateShockwave}>Activate Shockwave</button>
      <div>
        <p>Engine Power: {enginePower}%</p>
        <p>Turbo Boost: {turboBoost.toFixed(2)}%</p>
        <p>Laser Charge: {laserCharge}%</p>
      </div>
    </div>
  );
};

export default AdvancedF47GT;


import React, { useState, useEffect, useRef } from 'react';

const AdvancedF47 = () => {
  const [enginePower, setEnginePower] = useState(0);
  const [turboBoost, setTurboBoost] = useState(0);
  const [laserCharge, setLaserCharge] = useState(0);
  const [shockwaveActive, setShockwaveActive] = useState(false);
  const carRef = useRef(null);

  useEffect(() => {
    // Simulate engine and turbo boost
    const engineInterval = setInterval(() => {
      setEnginePower((prevPower) => Math.min(prevPower + 1, 100)); // Max engine power 100
      setTurboBoost((prevBoost) => Math.max(0, prevBoost - 0.5)); // Turbo boost decays
    }, 100);

    // Simulate laser charging
    const laserInterval = setInterval(() => {
      setLaserCharge((prevCharge) => Math.min(prevCharge + 2, 100)); // Max laser charge 100
    }, 200);

    return () => {
      clearInterval(engineInterval);
      clearInterval(laserInterval);
    };
  }, []);

  const activateTurbo = () => {
    setTurboBoost(100);
  };

  const fireLaser = () => {
    if (laserCharge >= 50) {
      console.log('Laser Fired!');
      setLaserCharge(0); // Reset laser charge after firing.
      // Simulate laser effect (e.g., animation)
      // ...
    } else {
      console.log('Laser charge too low!');
    }
  };

  const activateShockwave = () => {
    setShockwaveActive(true);
    console.log('Shockwave Activated!');
    // Simulate shockwave effect (e.g., animation, sound)
    setTimeout(() => {
      setShockwaveActive(false);
      console.log('Shockwave Deactivated!');
    }, 2000); // Shockwave duration 2 seconds
  };

  const carStyle = {
    width: '300px',
    height: '150px',
    backgroundColor: '#222',
    position: 'relative',
    borderRadius: '10px',
    border: '2px solid #555',
    overflow: 'hidden',
  };

  const turboBarStyle = {
    width: `${turboBoost}%`,
    height: '10px',
    backgroundColor: 'orange',
    position: 'absolute',
    bottom: '5px',
    left: '5px',
    transition: 'width 0.3s ease-in-out',
  };

  const laserBarStyle = {
    width: `${laserCharge}%`,
    height: '10px',
    backgroundColor: 'red',
    position: 'absolute',
    bottom: '20px',
    left: '5px',
    transition: 'width 0.3s ease-in-out',
  };

  const shockwaveStyle = {
    position: 'absolute',
    width: '400px',
    height: '400px',
    borderRadius: '50%',
    border: '4px dashed blue',
    animation: shockwaveActive ? 'shockwave 2s linear' : 'none',
    top: '-125px',
    left: '-50px',
    opacity: shockwaveActive ? 0.7 : 0,
    pointerEvents: 'none',
  };

  const engineBarStyle = {
    width: `${enginePower}%`,
    height: '10px',
    backgroundColor: 'green',
    position: 'absolute',
    bottom: '35px',
    left: '5px',
    transition: 'width 0.3s ease-in-out',
  };

  return (
    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
      <div ref={carRef} style={carStyle}>
        <div style={turboBarStyle}></div>
        <div style={laserBarStyle}></div>
        <div style={shockwaveStyle}></div>
        <div style={engineBarStyle}></div>
        {/* Add more styling for the car's appearance here */}
      </div>
      <button onClick={activateTurbo}>Activate Turbo</button>
      <button onClick={fireLaser}>Fire Laser</button>
      <button onClick={activateShockwave}>Activate Shockwave</button>
      <div>
        <p>Engine Power: {enginePower}%</p>
        <p>Turbo Boost: {turboBoost.toFixed(2)}%</p>
        <p>Laser Charge: {laserCharge}%</p>
      </div>
    </div>
  );
};

export default AdvancedF47;

